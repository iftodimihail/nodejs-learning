{"version":3,"sources":["../../src/repositories/author.js"],"names":["db","authorModel","Author","index","findAll","order","console","error","store","body","create","show","id","findByPk","update","where","destroy","author","storeBookForAuthor","setBooks","bookIds","getBooksForAuthor","authorBookModel","authorId"],"mappings":"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","file":"author.js","sourcesContent":["export default (db) => {\r\n\r\n  const authorModel = db.Author;\r\n\r\n  const index = async () => {\r\n    try {\r\n      return await authorModel.findAll({\r\n        order: [\r\n          ['id', 'DESC']\r\n        ]\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const store = async (body) => {\r\n    try {\r\n      return await authorModel.create(body);\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const show = async (id) => {\r\n    try {\r\n      return await authorModel.findByPk(id);\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const update = async (id, body) => {\r\n    try {\r\n      await authorModel.update(body, { where: { id } });\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const destroy = async (id) => {\r\n    try {\r\n      const author = await authorModel.findByPk(id);\r\n      if (author) {\r\n        await author.destroy();\r\n      }\r\n      return author;\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const storeBookForAuthor = async (body) => {\r\n    try {\r\n      const author = await authorModel.create(body);\r\n      await author.setBooks(body.bookIds);\r\n      return author;\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const getBooksForAuthor = async (id) => {\r\n    try {\r\n      return await authorBookModel.findAll({\r\n        where: {\r\n          authorId: id\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return {\r\n    index,\r\n    store,\r\n    show,\r\n    update,\r\n    destroy,\r\n    storeBookForAuthor,\r\n    getBooksForAuthor\r\n  };\r\n}\r\n"]}