{"version":3,"sources":["../../src/repositories/authorbook.js"],"names":["db","authorBookModel","authorbook","index","findAll","order","console","error","store","body","create","show","id","findByPk","update","where","destroy","authorBook"],"mappings":";;;;;;;;kBAAe,UAACA,EAAD,EAAQ;AACrB,MAAMC,kBAAkBD,GAAGE,UAA3B;;AAEA,MAAMC;AAAA,uEAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEGF,gBAAgBG,OAAhB,CAAwB;AACnCC,uBAAO,CACL,CAAC,IAAD,EAAO,MAAP,CADK;AAD4B,eAAxB,CAFH;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAQVC,sBAAQC,KAAR;AARU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA,KAAN;;AAaA,MAAMC;AAAA,wEAAQ,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEGR,gBAAgBS,MAAhB,CAAuBD,IAAvB,CAFH;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIVH,sBAAQC,KAAR;AAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA,KAAN;;AASA,MAAMI;AAAA,wEAAO,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEIX,gBAAgBY,QAAhB,CAAyBD,EAAzB,CAFJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAITN,sBAAQC,KAAR;AAJS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA,KAAN;;AASA,MAAMO;AAAA,wEAAS,kBAAOF,EAAP,EAAWH,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAELR,gBAAgBa,MAAhB,CAAuBL,IAAvB,EAA6B,EAAEM,OAAO,EAAEH,MAAF,EAAT,EAA7B,CAFK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIXN,sBAAQC,KAAR;AAJW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;;AAAA;AAAA;AAAA;AAAA,KAAN;;AASA,MAAMS;AAAA,wEAAU,kBAAOJ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEaX,gBAAgBY,QAAhB,CAAyBD,EAAzB,CAFb;;AAAA;AAENK,wBAFM;;AAAA,mBAGRA,UAHQ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIJA,WAAWD,OAAX,EAJI;;AAAA;AAAA,gDAMLC,UANK;;AAAA;AAAA;AAAA;;AAQZX,sBAAQC,KAAR;AARY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA,KAAN;;AAaA,SAAO;AACLJ,gBADK;AAELK,gBAFK;AAGLG,cAHK;AAILG,kBAJK;AAKLE;AALK,GAAP;AAOD,C","file":"authorbook.js","sourcesContent":["export default (db) => {\r\n  const authorBookModel = db.authorbook;\r\n\r\n  const index = async () => {\r\n    try {\r\n      return await authorBookModel.findAll({\r\n        order: [\r\n          ['id', 'DESC']\r\n        ]\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const store = async (body) => {\r\n    try {\r\n      return await authorBookModel.create(body);\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const show = async (id) => {\r\n    try {\r\n      return await authorBookModel.findByPk(id);\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const update = async (id, body) => {\r\n    try {\r\n      await authorBookModel.update(body, { where: { id } });\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const destroy = async (id) => {\r\n    try {\r\n      const authorBook = await authorBookModel.findByPk(id);\r\n      if (authorBook) {\r\n        await authorBook.destroy();\r\n      }\r\n      return authorBook;\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return {\r\n    index,\r\n    store,\r\n    show,\r\n    update,\r\n    destroy\r\n  };\r\n}\r\n"]}